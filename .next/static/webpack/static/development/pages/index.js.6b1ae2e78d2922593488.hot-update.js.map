{"version":3,"file":"static/webpack/static/development/pages/index.js.6b1ae2e78d2922593488.hot-update.js","sources":["webpack:///./components/yesbutton.js"],"sourcesContent":["import { motion, useAnimation } from \"framer-motion\"\nimport styled from 'styled-components';\n// import Sketch from \"../components/sketch\";\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\n\nfunction YesButton(props) {\n    console.log(isMobile ? 600 : 300);\n    // alert(isMobile);\n    const w = 100 * props.sizeMultiplier;\n    const h = w / 2.5;\n    const b = props.strokeWeight;\n    const s = props.shadow ? 8 : 0;\n\n    const topColor = `rgba(${props.topColor.r}, ${props.topColor.g}, ${props.topColor.b}, ${props.topColor.a})`;\n    var shadowColor = `rgba(${props.topColor.r}, ${props.topColor.g}, ${props.topColor.b}, ${props.topColor.a / 2})`;\n    shadowColor = `rgba(0,0,0,0.2)`;\n\n    console.log(w);\n\n    const click = {\n        up: { x: -s * 1.5, y: -s * 1.5, boxShadow: `${s * 1.5}px ${s * 1.5}px 0 ${shadowColor}`, },\n        static: { x: -s, y: -s, boxShadow: `${s}px ${s}px 0 ${shadowColor}`, },\n        down: { x: 0, y: 0, boxShadow: `0px 0px 0 ${shadowColor}`, }\n    }\n\n\n\n\n\n    const btnStyle = {\n        width: `${w}px`,\n        height: `${h}px`,\n        // transform: 'scale(0.5)',\n        // transformOrigin: 'left',\n        textAlign: 'center',\n        // owmargin: '10px',\n        position: 'absolute',\n        zIndex: '1',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: `${h / 8}px`,\n        // boxShadow: `5px 5px ${shadowColor} `,\n        border: `${b}px solid rgba(${props.borderColor.color.r}, ${props.borderColor.color.g}, ${props.borderColor.color.b}, ${props.borderColor.color.a})`,\n        // borderStyle: 'dashed',\n        // background: `${topColor}`,\n        backgroundImage: `linear-gradient(rgba(${props.topColor.color.r}, ${props.topColor.color.g}, ${props.topColor.color.b}, ${props.topColor.color.a}), rgba(${props.bottomColor.color.r}, ${props.bottomColor.color.g}, ${props.bottomColor.color.b}, ${props.bottomColor.color.a})`,\n    }\n\n    const textStyle = {\n        fontSize: `${h / 2.5}pt`,\n        fontFamily: `'${props.font}'`,\n        // paintOrder: 'stroke fill',\n        position: 'relative',\n        top: '-5.5%',\n        right: '-2%',\n        color: `rgba(${props.color.r}, ${props.color.g}, ${props.color.b}, ${props.color.a})`,\n        WebkitTextStrokeWidth: `${b}px`,\n        WebkitTextStrokeColor: `rgba(${props.textOutlineColor.color.r}, ${props.textOutlineColor.color.g}, ${props.textOutlineColor.color.b}, ${props.textOutlineColor.color.a})`,\n\n    }\n\n    const gridStyle = {\n        display: 'grid',\n        gridTemplateColumns: 'auto auto auto auto auto auto auto auto auto auto',\n        position: 'absolute',\n        width: `${w + b * 2}px`,\n        height: `${h + b * 2}px`,\n        zIndex: '0',\n    }\n\n    const gridBlock = {\n        // outline: ' 0.5px solid rgba(240,240,240,1)',\n        borderTop: `${b}px solid rgba(0,0,0,0.2)`,\n        borderRight: `${b}px solid rgba(0,0,0,0.2)`,\n        // background: 'white',\n    }\n\n    const gridBlockLeft = {\n        // outline: ' 0.5px solid rgba(240,240,240,1)',\n        borderTop: `${b}px solid rgba(0,0,0,0.2)`,\n        borderLeft: `${b}px solid rgba(0,0,0,0.2)`,\n        borderRight: `${b}px solid rgba(0,0,0,0.2)`,\n        marginLeft: '-1px',\n        // background: 'white',\n    }\n    const gridBlockBottom = {\n        // outline: ' 0.5px solid rgba(240,240,240,1)',\n        borderTop: `${b}px solid rgba(0,0,0,0.2)`,\n        borderRight: `${b}px solid rgba(0,0,0,0.2)`,\n        borderBottom: `${b}px solid rgba(0,0,0,0.2)`,\n        marginBottom: '-1px',\n\n        // background: 'white',\n    }\n\n    const gridCircle = {\n        border: `${b}px dashed rgba(50,50,50,1)`,\n\n        borderRadius: `${h / 8}px`,\n\n    }\n\n    const containerStyle = {\n        width: `${w}px`,\n        height: `${h}px`,\n        position: 'relative',\n        borderRadius: `${h / 8}px`,\n        cursor: 'pointer',\n        x: -s, y: -s, boxShadow: `${s}px ${s}px 0 ${shadowColor}`,\n        userSelect: 'none',\n        margin: `${s * 3}px`,\n        border: `${b}px solid rgba(0,0,0,0)`,\n        // width: '100%',\n        // height: '100%',\n    }\n\n    const supStyle = {\n        // color: 'black',\n    }\n\n    const captureStyle = {\n        // width: `${w * 2}px`,\n        // height: `${h * 2}px`,\n        // display: 'flex',\n        // alignItems: 'center',\n        // justifyContent: 'center',\n    }\n\n    const controls = useAnimation();\n\n\n    controls.start({\n        x: [0, -s * 1.5, -s],\n        y: [0, -s * 1.5, -s],\n        boxShadow: [`0px 0px 0 ${shadowColor}`, `${s * 1.5}px ${s * 1.5}px 0 ${shadowColor}`, `${s}px ${s}px 0 ${shadowColor}`],\n        transition: {\n            duration: 1,\n            times: [0, 0.25, 0.5]\n        }\n    })\n\n    return <div id=\"yes-button\" style={captureStyle}>\n        <motion.div\n            id=\"yes-button\"\n            style={containerStyle}\n            variants={click}\n            initial=\"static\"\n            // animate={props.clicked ? { ck: [null, \"up\", \"down\", \"static\"] } : { ck: [null, \"up\", \"down\", \"static\"] }}\n            animate={props.clicked ? controls : controls}\n            animate={controls}\n            whileHover=\"up\"\n            whileTap=\"down\"\n        >\n            <div style={gridStyle}>\n                <div style={gridCircle}></div>\n                <div style={gridBlockLeft}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridCircle}></div>\n\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n\n                <div style={gridBlockBottom}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlockBottom}></div>\n\n                <div style={gridCircle}></div>\n                <div style={gridBlockLeft}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridBlock}></div>\n                <div style={gridCircle}></div>\n            </div>\n\n            <motion.div\n                style={btnStyle}\n                animate={{ background: `${topColor}` }}\n                transition={{ duration: 0.7 }}\n            >\n                <span style={textStyle}>yes<span style={supStyle}>Â®</span></span>\n\n            </motion.div>\n        </motion.div>\n    </div >\n}\n\nexport default YesButton"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAUA;AACA;AAEA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAZA;AAcsourceRoot":""}