{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { motion } from \"framer-motion\";\nimport styled from 'styled-components';\nimport Sketch from \"../components/sketch\";\nimport { BrowserView, MobileView, isBrowser, isMobile } from \"react-device-detect\";\n\nfunction YesButton(props) {\n  console.log(isMobile ? 600 : 300); // alert(isMobile);\n\n  var w = 300;\n  var h = w / 2.5;\n  var b = 1;\n  var s = 6;\n  console.log(w);\n  var topColor = \"rgba(\".concat(props.topColor.color.r, \", \").concat(props.topColor.color.g, \", \").concat(props.topColor.color.b, \", \").concat(props.topColor.color.a, \")\");\n  var shadowColor = \"rgba(\".concat(props.topColor.color.r, \", \").concat(props.topColor.color.g, \", \").concat(props.topColor.color.b, \", \").concat(props.topColor.color.a / 2, \")\");\n  shadowColor = \"rgba(0,0,0,0.2)\";\n  var btnStyle = {\n    width: \"\".concat(w, \"px\"),\n    height: \"\".concat(h, \"px\"),\n    // transform: 'scale(0.5)',\n    // transformOrigin: 'left',\n    textAlign: 'center',\n    // owmargin: '10px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: \"\".concat(h / 8, \"px\"),\n    // boxShadow: `5px 5px ${shadowColor} `,\n    border: \"\".concat(b, \"px solid rgba(\").concat(props.borderColor.color.r, \", \").concat(props.borderColor.color.g, \", \").concat(props.borderColor.color.b, \", \").concat(props.borderColor.color.a, \")\"),\n    // borderStyle: 'dashed',\n    // background: `${topColor}`,\n    backgroundImage: \"linear-gradient(rgba(\".concat(props.topColor.color.r, \", \").concat(props.topColor.color.g, \", \").concat(props.topColor.color.b, \", \").concat(props.topColor.color.a, \"), \\n        rgba(\").concat(props.bottomColor.color.r, \", \").concat(props.bottomColor.color.g, \", \").concat(props.bottomColor.color.b, \", \").concat(props.bottomColor.color.a, \")\")\n  };\n  var textStyle = {\n    fontSize: \"\".concat(h / 2.5, \"pt\"),\n    fontFamily: \"'\".concat(props.font, \"'\"),\n    // paintOrder: 'stroke fill',\n    position: 'relative',\n    top: '-5.5%',\n    right: '-2%',\n    color: \"rgba(\".concat(props.color.color.r, \", \").concat(props.color.color.g, \", \").concat(props.color.color.b, \", \").concat(props.color.color.a, \")\"),\n    WebkitTextStrokeWidth: \"\".concat(b, \"px\"),\n    WebkitTextStrokeColor: \"rgba(\".concat(props.textOutlineColor.color.r, \", \").concat(props.textOutlineColor.color.g, \", \").concat(props.textOutlineColor.color.b, \", \").concat(props.textOutlineColor.color.a, \")\")\n  };\n  var gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto auto auto auto auto auto auto auto auto',\n    position: 'absolute',\n    width: \"\".concat(w + b * 2, \"px\"),\n    height: \"\".concat(h + b * 2, \"px\"),\n    zIndex: '-1'\n  };\n  var gridBlock = {\n    // outline: ' 0.5px solid rgba(240,240,240,1)',\n    borderTop: '1px solid rgba(0,0,0,0.2)',\n    borderRight: '1px solid rgba(0,0,0,0.2)' // background: 'white',\n\n  };\n  var gridCircle = {\n    border: ' 1px dashed rgba(50,50,50,1)',\n    borderRadius: \"\".concat(h / 8, \"px\")\n  };\n  var containerStyle = {\n    width: \"\".concat(w, \"px\"),\n    height: \"\".concat(h, \"px\"),\n    position: 'relative',\n    borderRadius: \"\".concat(h / 8, \"px\"),\n    cursor: 'pointer',\n    x: -s,\n    y: -s,\n    boxShadow: \"\".concat(s, \"px \").concat(s, \"px 0 \").concat(shadowColor),\n    userSelect: 'none',\n    margin: \"\".concat(s * 3, \"px\") // width: '100%',\n    // height: '100%',\n\n  };\n  var supStyle = {// color: 'black',\n  };\n  var captureStyle = {// width: `${w * 2}px`,\n    // height: `${h * 2}px`,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n  };\n  return __jsx(\"div\", {\n    id: \"yes-button\",\n    style: captureStyle\n  }, __jsx(motion.div, {\n    id: \"yes-button\",\n    style: containerStyle,\n    animate: {\n      x: -s,\n      y: -s,\n      boxShadow: \"\".concat(s, \"px \").concat(s, \"px 0 \").concat(shadowColor)\n    },\n    whileHover: {\n      x: -s * 1.5,\n      y: -s * 1.5,\n      boxShadow: \"\".concat(s * 1.5, \"px \").concat(s * 1.5, \"px 0 \").concat(shadowColor)\n    },\n    whileTap: {\n      x: 0,\n      y: 0,\n      boxShadow: \"0px 0px 0 \".concat(shadowColor)\n    }\n  }, __jsx(\"div\", {\n    style: gridStyle\n  }, __jsx(\"div\", {\n    style: gridCircle\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridCircle\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridCircle\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridCircle\n  })), __jsx(Sketch, null), __jsx(motion.div, {\n    style: btnStyle,\n    animate: {\n      background: \"\".concat(topColor)\n    }\n  }, __jsx(\"span\", {\n    style: textStyle\n  }, \"yes\", __jsx(\"span\", {\n    style: supStyle\n  }, \"\\xAE\")))));\n}\n\nexport default YesButton;","map":null,"metadata":{},"sourceType":"module"}