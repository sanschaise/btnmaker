{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { motion } from \"framer-motion\";\nimport styled from 'styled-components';\nimport Sketch from \"../components/sketch\";\nimport { BrowserView, MobileView, isBrowser, isMobile } from \"react-device-detect\";\n\nfunction YesButton(props) {\n  console.log(isMobile ? 600 : 300); // alert(isMobile);\n\n  const w = 300;\n  const h = w / 2.5;\n  const b = 1;\n  const s = 6;\n  console.log(w);\n  const topColor = `rgba(${props.topColor.color.r}, ${props.topColor.color.g}, ${props.topColor.color.b}, ${props.topColor.color.a})`;\n  var shadowColor = `rgba(${props.topColor.color.r}, ${props.topColor.color.g}, ${props.topColor.color.b}, ${props.topColor.color.a / 2})`;\n  shadowColor = `rgba(0,0,0,0.2)`;\n  const btnStyle = {\n    width: `${w}px`,\n    height: `${h}px`,\n    // transform: 'scale(0.5)',\n    // transformOrigin: 'left',\n    textAlign: 'center',\n    // owmargin: '10px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: `${h / 8}px`,\n    // boxShadow: `5px 5px ${shadowColor} `,\n    border: `${b}px solid rgba(${props.borderColor.color.r}, ${props.borderColor.color.g}, ${props.borderColor.color.b}, ${props.borderColor.color.a})`,\n    // borderStyle: 'dashed',\n    // background: `${topColor}`,\n    backgroundImage: `linear-gradient(rgba(${props.topColor.color.r}, ${props.topColor.color.g}, ${props.topColor.color.b}, ${props.topColor.color.a}), \n        rgba(${props.bottomColor.color.r}, ${props.bottomColor.color.g}, ${props.bottomColor.color.b}, ${props.bottomColor.color.a})`\n  };\n  const textStyle = {\n    fontSize: `${h / 2.5}pt`,\n    fontFamily: `'${props.font}'`,\n    // paintOrder: 'stroke fill',\n    position: 'relative',\n    top: '-5.5%',\n    right: '-2%',\n    color: `rgba(${props.color.color.r}, ${props.color.color.g}, ${props.color.color.b}, ${props.color.color.a})`,\n    WebkitTextStrokeWidth: `${b}px`,\n    WebkitTextStrokeColor: `rgba(${props.textOutlineColor.color.r}, ${props.textOutlineColor.color.g}, ${props.textOutlineColor.color.b}, ${props.textOutlineColor.color.a})`\n  };\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto auto auto auto auto auto auto auto auto',\n    position: 'absolute',\n    width: `${w + b * 2}px`,\n    height: `${h + b * 2}px`,\n    zIndex: '-1'\n  };\n  const gridBlock = {\n    // outline: ' 0.5px solid rgba(240,240,240,1)',\n    borderTop: '1px solid rgba(0,0,0,0.2)',\n    borderRight: '1px solid rgba(0,0,0,0.2)' // background: 'white',\n\n  };\n  const gridCircle = {\n    border: ' 1px dashed rgba(50,50,50,1)',\n    borderRadius: `${h / 8}px`\n  };\n  const containerStyle = {\n    width: `${w}px`,\n    height: `${h}px`,\n    position: 'relative',\n    borderRadius: `${h / 8}px`,\n    cursor: 'pointer',\n    x: -s,\n    y: -s,\n    boxShadow: `${s}px ${s}px 0 ${shadowColor}`,\n    userSelect: 'none',\n    margin: `${s * 3}px` // width: '100%',\n    // height: '100%',\n\n  };\n  const supStyle = {// color: 'black',\n  };\n  const captureStyle = {// width: `${w * 2}px`,\n    // height: `${h * 2}px`,\n    // display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n  };\n  return __jsx(\"div\", {\n    id: \"yes-button\",\n    style: captureStyle\n  }, __jsx(motion.div, {\n    id: \"yes-button\",\n    style: containerStyle,\n    animate: {\n      x: -s,\n      y: -s,\n      boxShadow: `${s}px ${s}px 0 ${shadowColor}`\n    },\n    whileHover: {\n      x: -s * 1.5,\n      y: -s * 1.5,\n      boxShadow: `${s * 1.5}px ${s * 1.5}px 0 ${shadowColor}`\n    },\n    whileTap: {\n      x: 0,\n      y: 0,\n      boxShadow: `0px 0px 0 ${shadowColor}`\n    }\n  }, __jsx(\"div\", {\n    style: gridStyle\n  }, __jsx(\"div\", {\n    style: gridCircle\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridCircle\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridCircle\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridBlock\n  }), __jsx(\"div\", {\n    style: gridCircle\n  })), __jsx(Sketch, null), __jsx(motion.div, {\n    style: btnStyle,\n    animate: {\n      background: `${topColor}`\n    }\n  }, __jsx(\"span\", {\n    style: textStyle\n  }, \"yes\", __jsx(\"span\", {\n    style: supStyle\n  }, \"\\xAE\")))));\n}\n\nexport default YesButton;","map":null,"metadata":{},"sourceType":"module"}