{"ast":null,"code":"var _jsxFileName = \"/Users/psanches/web/btnmaker/pages/index.js\";\nvar __jsx = React.createElement;\nimport YesButton from \"../components/yesbutton.js\";\nimport ColorPicker from \"../components/colorpicker.js\";\nimport FontPicker from \"../components/fontPicker\";\nimport React, { useState, useEffect } from 'react';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport { motion } from \"framer-motion\";\n\nfunction HomePage() {\n  const {\n    0: font,\n    1: setFont\n  } = useState(\"NowTextBold\");\n  const {\n    0: topColor,\n    1: setTopColor\n  } = useState({\n    color: {\n      r: Math.floor(Math.random() * 255),\n      g: Math.floor(Math.random() * 255),\n      b: Math.floor(Math.random() * 255),\n      a: '0.3'\n    }\n  });\n  const {\n    0: bottomColor,\n    1: setBottomColor\n  } = useState({\n    color: {\n      r: Math.floor(Math.random() * 255),\n      g: Math.floor(Math.random() * 255),\n      b: Math.floor(Math.random() * 255),\n      a: '0.3'\n    }\n  });\n\n  function setBothColors(array) {\n    setTopColor(array);\n    setBottomColor(array);\n  }\n\n  const {\n    0: color,\n    1: setColor\n  } = useState({\n    color: {\n      r: Math.floor(Math.random() * 255),\n      g: Math.floor(Math.random() * 255),\n      b: Math.floor(Math.random() * 255),\n      a: '1'\n    }\n  });\n  const {\n    0: textOutlineColor,\n    1: setTextOutlineColor\n  } = useState({\n    color: {\n      r: '0',\n      g: '0',\n      b: '0',\n      a: '1'\n    }\n  });\n  const {\n    0: borderColor,\n    1: setBorderColor\n  } = useState({\n    color: {\n      r: '0',\n      g: '0',\n      b: '0',\n      a: '1'\n    }\n  });\n\n  function useSave() {\n    // useEffect(() => {\n    htmlToImage.toBlob(document.getElementById('yes-button'), {}).then(function (blob) {\n      download(blob, 'yes®.png');\n    }); // });\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(YesButton, {\n    font: font,\n    topColor: topColor,\n    textOutlineColor: textOutlineColor,\n    bottomColor: bottomColor,\n    color: color,\n    borderColor: borderColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), __jsx(motion.div, {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"controlStrip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(ColorPicker, {\n    className: \"colorPicker\",\n    color: topColor,\n    setColor: setBothColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), \"Background\"), __jsx(\"div\", {\n    className: \"controlStrip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(ColorPicker, {\n    className: \"colorPicker\",\n    color: color,\n    setColor: setColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), \"Typography\"), __jsx(\"div\", {\n    className: \"controlStrip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Draw\"), __jsx(\"div\", {\n    className: \"controlStrip\",\n    onClick: () => useSave(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Download PNG\")));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/psanches/web/btnmaker/pages/index.js"],"names":["YesButton","ColorPicker","FontPicker","React","useState","useEffect","htmlToImage","download","motion","HomePage","font","setFont","topColor","setTopColor","color","r","Math","floor","random","g","b","a","bottomColor","setBottomColor","setBothColors","array","setColor","textOutlineColor","setTextOutlineColor","borderColor","setBorderColor","useSave","toBlob","document","getElementById","then","blob"],"mappings":"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","sourcesContent":["import YesButton from \"../components/yesbutton.js\";\nimport ColorPicker from \"../components/colorpicker.js\";\nimport FontPicker from \"../components/fontPicker\";\nimport React, { useState, useEffect } from 'react';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\n\nimport { motion } from \"framer-motion\"\n\n\nfunction HomePage() {\n    const [font, setFont] = useState(\"NowTextBold\")\n    const [topColor, setTopColor] = useState({\n        color: {\n            r: Math.floor(Math.random() * 255),\n            g: Math.floor(Math.random() * 255),\n            b: Math.floor(Math.random() * 255),\n            a: '0.3',\n        },\n    });\n    const [bottomColor, setBottomColor] = useState({\n        color: {\n            r: Math.floor(Math.random() * 255),\n            g: Math.floor(Math.random() * 255),\n            b: Math.floor(Math.random() * 255),\n            a: '0.3',\n        },\n    });\n\n    function setBothColors(array) {\n        setTopColor(array);\n        setBottomColor(array);\n    }\n\n    const [color, setColor] = useState({\n        color: {\n            r: Math.floor(Math.random() * 255),\n            g: Math.floor(Math.random() * 255),\n            b: Math.floor(Math.random() * 255),\n            a: '1',\n        },\n    });\n\n    const [textOutlineColor, setTextOutlineColor] = useState({\n        color: {\n            r: '0',\n            g: '0',\n            b: '0',\n            a: '1',\n        },\n    });\n\n    const [borderColor, setBorderColor] = useState({\n        color: {\n            r: '0',\n            g: '0',\n            b: '0',\n            a: '1',\n        },\n    });\n\n\n\n    function useSave() {\n        // useEffect(() => {\n        htmlToImage.toBlob(document.getElementById('yes-button'), {})\n            .then(function (blob) {\n                download(blob, 'yes®.png');\n            });\n        // });\n    }\n\n\n    return <div>\n\n        <div className=\"canvas\">\n            <YesButton font={font} topColor={topColor} textOutlineColor={textOutlineColor} bottomColor={bottomColor} color={color} borderColor={borderColor} />\n        </div>\n        <motion.div className=\"control\">\n            <div className=\"controlStrip\">\n                <ColorPicker className=\"colorPicker\" color={topColor} setColor={setBothColors} />\n                Background\n\n            </div>\n            <div className=\"controlStrip\">\n                <ColorPicker className=\"colorPicker\" color={color} setColor={setColor} />\n                Typography\n            </div>\n            <div className=\"controlStrip\">Draw</div>\n            <div className=\"controlStrip\" onClick={() => useSave()}>Download PNG</div>\n            {/* <ColorPicker className=\"colorPicker\" color={topColor} setColor={setTopColor} />\n            <div className=\"label\"> Top Color </div>\n\n            <ColorPicker className=\"colorPicker\" color={bottomColor} setColor={setBottomColor} />\n            <div className=\"label\"> Bottom Color </div>\n\n            <ColorPicker className=\"colorPicker\" color={color} setColor={setColor} />\n            <div className=\"label\">Text Color </div>\n\n            <ColorPicker className=\"colorPicker\" color={textOutlineColor} setColor={setTextOutlineColor} />\n            <div className=\"label\">Text Outline Color </div>\n\n            <ColorPicker className=\"colorPicker\" color={borderColor} setColor={setBorderColor} />\n            <div className=\"label\">Border Color </div>\n\n            <FontPicker setFont={setFont} /> */}\n\n\n\n            {/* <button onClick={() => useSave()}>Download PNG</button> */}\n        </motion.div>\n    </div >\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}