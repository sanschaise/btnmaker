{"ast":null,"code":"var _jsxFileName = \"/Users/psanches/web/btnmaker/pages/index.js\";\nvar __jsx = React.createElement;\nimport YesButton from \"../components/yesbutton.js\";\nimport ColorPicker from \"../components/colorpicker.js\";\nimport FontPicker from \"../components/fontPicker\";\nimport React, { useState, useEffect } from 'react';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\nimport { motion } from \"framer-motion\";\n\nfunction HomePage() {\n  const {\n    0: font,\n    1: setFont\n  } = useState(\"NowTextBold\");\n  const {\n    0: topColor,\n    1: setTopColor\n  } = useState({\n    color: {\n      r: '255',\n      g: '255',\n      b: '255',\n      a: '0.3'\n    }\n  });\n  const {\n    0: bottomColor,\n    1: setBottomColor\n  } = useState({\n    color: {\n      r: '255',\n      g: '255',\n      b: '255',\n      a: '0.3'\n    }\n  });\n\n  function setBothColors(json) {\n    setTopColor(json);\n    setBottomColor(json);\n  }\n\n  const colorSequence = [{\n    color: {\n      r: 234,\n      g: 51,\n      b: 35,\n      a: 1\n    }\n  }, {\n    color: {\n      r: 254,\n      g: 103,\n      b: 0,\n      a: 1\n    }\n  }];\n  var i = 0;\n\n  function playSequence() {\n    setBothColors(colorSequence[i]);\n    setClicked(!clicked);\n    console.log(colorSequence[i]);\n    i = i + 1;\n  }\n\n  function setRandomColor() {\n    setBothColors({\n      color: {\n        r: Math.floor(Math.random() * 255),\n        g: Math.floor(Math.random() * 255),\n        b: Math.floor(Math.random() * 255),\n        a: '1'\n      }\n    });\n    setClicked(!clicked);\n  }\n\n  const {\n    0: color,\n    1: setColor\n  } = useState({\n    color: {\n      r: '255',\n      g: '255',\n      b: '255',\n      a: '1'\n    }\n  });\n  const {\n    0: textOutlineColor,\n    1: setTextOutlineColor\n  } = useState({\n    color: {\n      r: '0',\n      g: '0',\n      b: '0',\n      a: '1'\n    }\n  });\n  const {\n    0: borderColor,\n    1: setBorderColor\n  } = useState({\n    color: {\n      r: '0',\n      g: '0',\n      b: '0',\n      a: '1'\n    }\n  });\n  const {\n    0: clicked,\n    1: setClicked\n  } = useState(false);\n\n  function useSave() {\n    // useEffect(() => {\n    htmlToImage.toBlob(document.getElementById('yes-button'), {}).then(function (blob) {\n      download(blob, 'yesÂ®.png');\n    }); // });\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(YesButton, {\n    clicked: clicked,\n    font: font,\n    topColor: topColor,\n    textOutlineColor: textOutlineColor,\n    bottomColor: bottomColor,\n    color: color,\n    borderColor: borderColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), __jsx(motion.div, {\n    className: \"control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"controlStrip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(ColorPicker, {\n    className: \"colorPicker\",\n    color: topColor,\n    setColor: setBothColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), \"Background\"), __jsx(\"div\", {\n    className: \"controlStrip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(ColorPicker, {\n    className: \"colorPicker\",\n    color: color,\n    setColor: setColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), \"Typography\"), __jsx(\"div\", {\n    className: \"controlStrip\",\n    onClick: () => playSequence(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Draw\"), __jsx(\"div\", {\n    className: \"controlStrip\",\n    onClick: () => useSave(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Download PNG\")));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/psanches/web/btnmaker/pages/index.js"],"names":["YesButton","ColorPicker","FontPicker","React","useState","useEffect","htmlToImage","download","motion","HomePage","font","setFont","topColor","setTopColor","color","r","g","b","a","bottomColor","setBottomColor","setBothColors","json","colorSequence","i","playSequence","setClicked","clicked","console","log","setRandomColor","Math","floor","random","setColor","textOutlineColor","setTextOutlineColor","borderColor","setBorderColor","useSave","toBlob","document","getElementById","then","blob"],"mappings":"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","sourcesContent":["import YesButton from \"../components/yesbutton.js\";\nimport ColorPicker from \"../components/colorpicker.js\";\nimport FontPicker from \"../components/fontPicker\";\nimport React, { useState, useEffect } from 'react';\nimport htmlToImage from 'html-to-image';\nimport download from 'downloadjs';\n\nimport { motion } from \"framer-motion\"\n\n\nfunction HomePage() {\n    const [font, setFont] = useState(\"NowTextBold\")\n    const [topColor, setTopColor] = useState({\n        color: {\n            r: '255',\n            g: '255',\n            b: '255',\n            a: '0.3',\n        },\n    });\n    const [bottomColor, setBottomColor] = useState({\n        color: {\n            r: '255',\n            g: '255',\n            b: '255',\n            a: '0.3',\n        },\n    });\n\n    function setBothColors(json) {\n        setTopColor(json);\n        setBottomColor(json);\n    }\n\n    const colorSequence = [\n        {\n            color: {\n                r: 234,\n                g: 51,\n                b: 35,\n                a: 1\n            }\n        },\n        {\n            color: {\n                r: 254,\n                g: 103,\n                b: 0,\n                a: 1\n            }\n        },\n    ]\n\n    var i = 0;\n    function playSequence() {\n        setBothColors(\n            colorSequence[i]\n        )\n        setClicked(!clicked);\n        console.log(colorSequence[i])\n        i = i + 1;\n\n    }\n\n    function setRandomColor() {\n        setBothColors({\n            color: {\n                r: Math.floor(Math.random() * 255),\n                g: Math.floor(Math.random() * 255),\n                b: Math.floor(Math.random() * 255),\n                a: '1',\n            },\n        })\n        setClicked(!clicked);\n    }\n\n    const [color, setColor] = useState({\n        color: {\n            r: '255',\n            g: '255',\n            b: '255',\n            a: '1',\n        },\n    });\n\n    const [textOutlineColor, setTextOutlineColor] = useState({\n        color: {\n            r: '0',\n            g: '0',\n            b: '0',\n            a: '1',\n        },\n    });\n\n    const [borderColor, setBorderColor] = useState({\n        color: {\n            r: '0',\n            g: '0',\n            b: '0',\n            a: '1',\n        },\n    });\n\n    const [clicked, setClicked] = useState(false);\n\n\n    function useSave() {\n        // useEffect(() => {\n        htmlToImage.toBlob(document.getElementById('yes-button'), {})\n            .then(function (blob) {\n                download(blob, 'yesÂ®.png');\n            });\n        // });\n    }\n\n\n    return <div>\n\n        <div className=\"canvas\">\n            <YesButton clicked={clicked} font={font} topColor={topColor} textOutlineColor={textOutlineColor} bottomColor={bottomColor} color={color} borderColor={borderColor} />\n        </div>\n        <motion.div className=\"control\">\n            <div className=\"controlStrip\">\n                <ColorPicker className=\"colorPicker\" color={topColor} setColor={setBothColors} />\n                Background\n\n            </div>\n            <div className=\"controlStrip\">\n                <ColorPicker className=\"colorPicker\" color={color} setColor={setColor} />\n                Typography\n            </div>\n            <div className=\"controlStrip\" onClick={() => playSequence()} >Draw</div>\n            <div className=\"controlStrip\" onClick={() => useSave()}>Download PNG</div>\n            {/* <ColorPicker className=\"colorPicker\" color={topColor} setColor={setTopColor} />\n            <div className=\"label\"> Top Color </div>\n\n            <ColorPicker className=\"colorPicker\" color={bottomColor} setColor={setBottomColor} />\n            <div className=\"label\"> Bottom Color </div>\n\n            <ColorPicker className=\"colorPicker\" color={color} setColor={setColor} />\n            <div className=\"label\">Text Color </div>\n\n            <ColorPicker className=\"colorPicker\" color={textOutlineColor} setColor={setTextOutlineColor} />\n            <div className=\"label\">Text Outline Color </div>\n\n            <ColorPicker className=\"colorPicker\" color={borderColor} setColor={setBorderColor} />\n            <div className=\"label\">Border Color </div>\n\n            <FontPicker setFont={setFont} /> */}\n\n\n\n            {/* <button onClick={() => useSave()}>Download PNG</button> */}\n        </motion.div>\n    </div >\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}