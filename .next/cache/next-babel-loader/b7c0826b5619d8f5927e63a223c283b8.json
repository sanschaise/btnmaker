{"ast":null,"code":"'use strict';\n\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport reactCSS from 'reactcss';\nimport { ChromePicker } from 'react-color';\n\nclass ColorPicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClick\", () => {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        displayColorPicker: false\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", color => {\n      this.setState({\n        color: color.rgb\n      });\n      this.props.setColor({\n        color: color.rgb\n      });\n    });\n\n    console.log(props.color);\n    this.state = {\n      displayColorPicker: false,\n      color: {\n        r: props.color.color.r,\n        g: props.color.color.g,\n        b: props.color.color.b,\n        a: props.color.color.a\n      }\n    };\n  } // static getDerivedStateFromProps(props, state) {\n  //     return {\n  //         color: {\n  //             r: props.color.r,\n  //             g: props.color.g,\n  //             b: props.color.b,\n  //             a: props.color.a,\n  //         },\n  //     };\n  // }\n\n\n  componentDidMount() {\n    console.log(this.state);\n  }\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '20px',\n          height: '20px',\n          borderRadius: '100vw',\n          boxShadow: `2.5px 2.5px rgba(0,0,0,0.25)`,\n          background: `rgba(${this.state.color.r}, ${this.state.color.g}, ${this.state.color.b}, ${this.state.color.a})`\n        },\n        swatch: {\n          padding: '0px',\n          background: '#fff',\n          borderRadius: '100vw',\n          border: 'black 1px solid',\n          // boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer'\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2'\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px'\n        },\n        parent: {\n          display: 'inline',\n          position: 'relative',\n          top: '3px',\n          marginRight: '15px'\n        }\n      }\n    });\n    return __jsx(\"div\", {\n      style: styles.parent\n    }, __jsx(\"div\", {\n      style: styles.swatch,\n      onClick: this.handleClick\n    }, __jsx(\"div\", {\n      style: styles.color\n    })), this.state.displayColorPicker ? __jsx(\"div\", {\n      style: styles.popover\n    }, __jsx(\"div\", {\n      style: styles.cover,\n      onClick: this.handleClose\n    }), __jsx(ChromePicker, {\n      color: this.state.color,\n      onChange: this.handleChange\n    })) : null);\n  }\n\n}\n\nexport default ColorPicker;","map":null,"metadata":{},"sourceType":"module"}