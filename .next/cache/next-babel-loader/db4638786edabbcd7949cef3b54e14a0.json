{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport reactCSS from 'reactcss';\nimport { ChromePicker } from 'react-color';\n\nvar ColorPicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ColorPicker, _React$Component);\n\n  function ColorPicker(props) {\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColorPicker).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {\n      _this.setState({\n        displayColorPicker: !_this.state.displayColorPicker\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        displayColorPicker: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (color) {\n      _this.setState({\n        color: color.rgb\n      });\n\n      _this.props.setColor({\n        color: color.rgb\n      });\n    });\n\n    console.log(props.color);\n    _this.state = {\n      displayColorPicker: false,\n      color: {\n        r: props.color.color.r,\n        g: props.color.color.g,\n        b: props.color.color.b,\n        a: props.color.color.a\n      }\n    };\n    return _this;\n  } // static getDerivedStateFromProps(props, state) {\n  //     return {\n  //         color: {\n  //             r: props.color.r,\n  //             g: props.color.g,\n  //             b: props.color.b,\n  //             a: props.color.a,\n  //         },\n  //     };\n  // }\n\n\n  _createClass(ColorPicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styles = reactCSS({\n        'default': {\n          color: {\n            width: '20px',\n            height: '20px',\n            borderRadius: '100vw',\n            boxShadow: \"2.5px 2.5px rgba(0,0,0,0.25)\",\n            background: \"rgba(\".concat(this.state.color.r, \", \").concat(this.state.color.g, \", \").concat(this.state.color.b, \", \").concat(this.state.color.a, \")\")\n          },\n          swatch: {\n            padding: '0px',\n            background: '#fff',\n            borderRadius: '100vw',\n            border: 'black 1px solid',\n            // boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n            display: 'inline-block',\n            cursor: 'pointer'\n          },\n          popover: {\n            position: 'absolute',\n            zIndex: '2'\n          },\n          cover: {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px'\n          },\n          parent: {\n            display: 'inline',\n            position: 'relative',\n            top: '3px',\n            marginRight: '15px'\n          }\n        }\n      });\n      return __jsx(\"div\", {\n        style: styles.parent\n      }, __jsx(\"div\", {\n        style: styles.swatch,\n        onClick: this.handleClick\n      }, __jsx(\"div\", {\n        style: styles.color\n      })), this.state.displayColorPicker ? __jsx(\"div\", {\n        style: styles.popover\n      }, __jsx(\"div\", {\n        style: styles.cover,\n        onClick: this.handleClose\n      }), __jsx(ChromePicker, {\n        color: this.state.color,\n        onChange: this.handleChange\n      })) : null);\n    }\n  }]);\n\n  return ColorPicker;\n}(React.Component);\n\nexport default ColorPicker;","map":null,"metadata":{},"sourceType":"module"}